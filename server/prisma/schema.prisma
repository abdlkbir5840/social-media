// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id            Int          @id @default(autoincrement())
  username      String
  email         String       @unique
  password      String       @unique
  impressions   Int          @default(0)
  occupation    String       @default("")
  viewedProfile Int?         @default(0)
  profileImg    Image?
  posts         Post[]
  followers     Friend[]     @relation("following") // users who have chosen to follow your account.
  following     Friend[]     @relation("follower") // users you choose to follow
  profile       UserProfile?
  likes         Like[]
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String   @default("")
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  images    Image[]
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Friend {
  id         Int  @id @default(autoincrement())
  follower   User @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
  followerId Int
  followed   User @relation("following", fields: [followedId], references: [id], onDelete: Cascade)
  followedId Int
  status      String @default("pending") // "pending", "accepted", "rejected"
}

model UserProfile {
  id                 Int         @id @default(autoincrement())
  bio                String      @default("")
  location           String
  city               String
  schooling          Schooling[]
  relationshipStatus String      @default("")
  user               User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             Int         @unique
}

model Schooling {
  id            Int         @id @default(autoincrement())
  school        String      @default("")
  diploma       String      @default("")
  userProfile   UserProfile @relation(fields: [userProfileId], references: [id], onDelete: Cascade)
  userProfileId Int
}

model Image {
  id     Int    @id @default(autoincrement())
  url    String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int    @unique
  post   Post?  @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int?
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
}
